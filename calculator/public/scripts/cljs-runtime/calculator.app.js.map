{"version":3,"sources":["calculator/app.cljs"],"mappings":"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","names":["calculator.app/current-value","reagent.core.atom","calculator.app/xy-atom","cljs.core.atom","calculator.app/mem-atom","calculator.app/valuta-atom","calculator.app/get-value","event","js/console.log","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/+","cljs.core/reset!","cljs.core/deref","calculator.app/clear-display","calculator.app/calculate","cljs.core/assoc-in","cljs.core._EQ_","calculator.app/result","G__27601","G__27602","fexpr__27600","cljs.reader.read_string","calculator.app/add-to-memory","n","calculator.app/mem-recall","calculator.app/mem-reset","calculator.app/pi","js/Math","calculator.app/x-squared","calculator.app/valuta","calculator.app/v","cljs.core.get","calculator.app/mini-app","cljs.core//","cljs.core/-","cljs.core/*","calculator.app/run","reagent.dom.render","js/document.getElementById","calculator.app/reload","js/console"],"sourcesContent":["(ns calculator.app\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rdom]\n    [cljs.reader :refer [read-string]]))\n\n\n(def current-value (r/atom 0))\n(def xy-atom (atom {:x 0 :y \"\" :z \"\" :sym nil}))\n(def mem-atom (r/atom 0))\n(def valuta-atom (r/atom \"\"))\n\n(defn get-value [event]\n      (js/console.log event)\n      (swap! xy-atom update-in [:y] + event)\n      (reset! current-value (:y @xy-atom))\n      )\n\n(defn clear-display []\n      (reset! current-value 0)\n      (reset! xy-atom {:x 0 :y \"\" :z \"\" :sym nil})\n      (reset! valuta-atom \"\")\n      )\n\n(defn calculate [event]\n      (swap! xy-atom assoc-in [:sym] event)\n      ;(swap! xy-atom update-in [:sym] + event )\n      (if (= (:z @xy-atom) \"\") (swap! xy-atom update-in [:z] + (:y @xy-atom)))\n      (swap! xy-atom assoc-in [:y] \"\")\n      )\n\n(defn result []\n      ;below code used eval. and is now replaced with read-string and also using operator functions parsed directly from events in the calculate function.\n      ;(reset! current-value (js/eval (str (:z @xy-atom)\n      ;                                    (:sym @xy-atom)\n      ;                                    (:y @xy-atom)\n      ;                                    )))\n      (reset! current-value ((:sym @xy-atom)\n                             (read-string (:z @xy-atom))\n                             (read-string (:y @xy-atom))))\n      (reset! xy-atom {:y \"\" :z @current-value :sym nil})\n      )\n\n(defn add-to-memory []\n      (swap! mem-atom (fn [n] (+ n (read-string @current-value))))\n      )\n\n(defn mem-recall []\n      (swap! xy-atom assoc-in [:y] @mem-atom)\n      (reset! current-value @mem-atom)\n      )\n\n(defn mem-reset []\n      (reset! mem-atom 0))\n\n\n(defn pi []\n      (reset! current-value (.-PI js/Math))                               ;\n      (swap! xy-atom assoc-in [:y] @current-value)\n      )\n\n(defn x-squared []\n      (reset! current-value (* @current-value @current-value))\n      (swap! xy-atom assoc-in [:y] @current-value)\n      )\n\n(defn valuta [event]\n      (def v {\"\u00a3\" 0.1154,  \"US$\" 0.1603, \"\u20ac\" 0.1344})\n      (reset! current-value (* (read-string (:y @xy-atom)) (get v event)))\n      (reset! valuta-atom event)\n      )\n\n(defn mini-app []\n      [:table  {:border \"1\"}\n       [:tbody\n        [:tr\n         [:td  {:colspan \"2\"} [:input#result {:readonly \"\" :type \"text\" :value  @current-value }]]\n         [:td  {:colspan \"2\"} [:input#result {:readonly \"\" :type \"text\" :value  @valuta-atom }]]\n         [:td  {:colspan \"1\"} [:input {:type \"button\" :value \"c\" :on-click #(clear-display)} ]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"1\" :on-click #(get-value 1)  }]]\n         [:td [:input {:type \"button\" :value \"2\" :on-click #(get-value 2) }]]\n         [:td [:input {:type \"button\" :value \"3\" :on-click #(get-value 3)}]]\n         [:td [:input {:type \"button\" :value \"/\" :on-click #(calculate /)}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"4\" :on-click #(get-value 4)}]]\n         [:td [:input {:type \"button\" :value \"5\" :on-click #(get-value 5)}]]\n         [:td [:input {:type \"button\" :value \"6\" :on-click #(get-value 6)}]]\n         [:td [:input {:type \"button\" :value \"-\" :on-click #(calculate -)}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"7\" :on-click #(get-value 7)}]]\n         [:td [:input {:type \"button\" :value \"8\" :on-click #(get-value 8)}]]\n         [:td [:input {:type \"button\" :value \"9\" :on-click #(get-value 9)}]]\n         [:td [:input {:type \"button\" :value \"+\" :on-click #(calculate +)}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \".\" :on-click #(get-value \".\")}]]\n         [:td [:input {:type \"button\" :value \"0\" :on-click #(get-value 0)}]]\n         [:td [:input {:type \"button\" :value \"=\" :on-click #(result)}]]\n         [:td [:input {:type \"button\" :value \"*\" :on-click #(calculate *)}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"\u03c0\" :on-click #(pi)}]]\n         [:td [:input {:type \"button\" :value \"MemReset\" :on-click #(mem-reset)}]]\n         [:td [:input {:type \"button\" :value \"MemRecall\" :on-click #(mem-recall)}]]\n         [:td [:input {:type \"button\" :value \"Mem+\" :on-click #(add-to-memory)}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"x\u00b2\" :on-click #(x-squared)}]]\n         [:td [:input {:type \"button\" :value \"\u00a3\" :on-click #(valuta \"\u00a3\")}]]\n         [:td [:input {:type \"button\" :value \"US$\" :on-click #(valuta \"US$\")}]]\n         [:td [:input {:type \"button\" :value \"\u20ac\" :on-click #(valuta \"\u20ac\")}]]]]])\n\n(defn ^:export run []\n      (rdom/render [mini-app] (js/document.getElementById \"app\")))\n\n(defn ^:export reload []\n      (.log js/console \"reload...\")\n      (run))\n"]}